[{"categories":["计算机网络"],"content":"写在前面 聊起 HTTP，总有一种熟悉又陌生的感觉。 HTTP 是每天都在打交道的基础网络组件。但中文网络上大多内容都是面向面试的… 系统性内容较少，相关知识也比较零碎。 本文不是大而全的 HTTP 手册（大概率也没法覆盖全貌），也不针对技术面试，旨在梳理 HTTP 协议的基本框架，建立整体认知。 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:1:0","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":["计算机网络"],"content":"HTTP 概念 HTTP 是一种 C-S（client-server） 架构的网络通信协议。 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:2:0","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":["计算机网络"],"content":"概念 HTTP（HyperText Transfer Protocol，超文本传输协议），顾名思义，它是被设计为在互联网计算机间传输超文本的一种通信协议，也可以说是一种规范。 HTTP 发展至今，已经不仅局限于传输超文本，图片、视频、HTML 表单等等均可以通过 HTTP 传输。HTTP 是互联网的 “神经”，是最重要的基础设施。 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:2:1","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":["计算机网络"],"content":"HTTP 组件 HTTP 协议起指导作用。通过建立各种网络组件，指导组件间的协作，共同完成网络数据在计算机节点间的传输。 HTTP 组件 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:3:0","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":["计算机网络"],"content":"客户端 客户端即客户代理，是 HTTP 请求的发出方，通常是浏览器或者网络请求代码。 只有客户端会发出请求（Request），服务端不会（随着发展，已经有机制可以在服务端模拟发出消息）。 客户端发出请求后，接收服务端响应（Response）并解析响应的内容，以便进行下一步处理（呈现在浏览器或者对数据进行再处理）。 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:3:1","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":["计算机网络"],"content":"Proxys 请求发出后，实际还需要经过路由器、网关等诸多环节才能到达服务端。 Web 架构是分层的，请求传递的大多操作都在传输层、网络层或物理层，这些层对于 HTTP 应用层基本上透明的。也会对网络性能产生重要影响。 Proxys 大多在应用层参与消息传递，且不一定是透明的（有些代理可能会对请求消息内容进行修改，有的则不会）。 Proxys 可以发挥如负载均衡、流量清洗、缓存、鉴权等等作用。 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:3:2","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":["计算机网络"],"content":"服务端 服务端可以提供客户端所请求的数据，通常是一个计算机或者多个共享负载的计算机组成的服务集群，这些计算机通常会运行开发者构建的各种软件，以此向客户端提供多样的互联网服务。 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:3:3","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":["计算机网络"],"content":"HTTP 基本性质 简单可扩展：协议简单。HTTP Header 也支持方便地对协议进行扩展。 无状态但不一定无会话：无状态是指：同一个连接中，多个请求是没有关系的。有状态的会话能力可以借助 HTTP Cookie 实现 —— Cookie 也是利用 Header 的扩展性添加进协议流程的，它使得多次请求可以共享相同的上下文信息或状态。解决了 HTTP 协议无状态带来的一些问题。 HTTP 和网络连接：网络连接通常由传输层控制。HTTP 不要求传输层协议是面向连接的，只需要 可靠 即可。TCP 是可靠的，UDP 不是，因此 HTTP 建立在 TCP 标准上。不过在发展过程中，出现了一种新的传输层协议 —— QUIC（Google 提出），它建立在 UDP 之上。 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:4:0","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":["计算机网络"],"content":"HTTP 连接问题 HTTP 是基于 TCP 可靠连接的，因此建立 HTTP 连接的过程，其实就是使用三次 TCP 握手的过程。 TCP 三次握手 ","date":"2023-12-29","objectID":"/%E8%81%8A%E8%81%8Ahttp/:5:0","tags":["网络"],"title":"聊聊 HTTP","uri":"/%E8%81%8A%E8%81%8Ahttp/"},{"categories":[],"content":"为什么想做博客~ 我在互联网做技术，也算大厂。但每天的工作内容比较枯燥。 国内的商业公司，经营利润和业务发展大多摆在极重要的位置。个人觉得，大多时候技术相对不那么受关注（国外公司不清楚，不瞎说），每天开会比较多，为了支持业务快速发展，很多技术同学也都是抱着 “能用就行，先上线” 的心态，技术气氛比较浮躁… 最初决定做技术，心里是比较纯粹的（现在也是～）。我相信技术本身有自己独特的价值和魅力。这也是我的一大爱好，发现问题，解决问题的感觉真的很酷！ 一直想做内容积累，但因为各种理由都没能真正开始，最近刚好有些想法，想着可能是个契机，就动手了。 为什么是辜月 辜者，故也，亦有 \" 吐故纳新 \" 之意。 癸卯年辜月有了做这个博客的想法，就定了这个有些随意的名字，但我很喜欢。 会写些什么 计算机领域，一些常见技术问题，希望能深入讨论 生产中一些老生常谈的话题或技术方案，希望用新的视角来看 偶尔有些想法或者看法，也会记录下 ","date":"2023-12-27","objectID":"/%E6%A0%B9/:0:0","tags":["动念"],"title":"缘由，亦或缘起","uri":"/%E6%A0%B9/"}]